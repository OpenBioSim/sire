// This file has been generated by Py++.

// (C) Christopher Woods, GPL >= 3 License

#include "boost/python.hpp"
#include "_SireOpenMM_free_functions.pypp.hpp"

namespace bp = boost::python;

#include "SireBase/parallel.h"

#include "SireBase/propertylist.h"

#include "SireCAS/lambdaschedule.h"

#include "SireError/errors.h"

#include "SireMM/amberparams.h"

#include "SireMM/atomljs.h"

#include "SireMM/selectorbond.h"

#include "SireMaths/vector.h"

#include "SireMol/atomcharges.h"

#include "SireMol/atomcoords.h"

#include "SireMol/atomelements.h"

#include "SireMol/atommasses.h"

#include "SireMol/atomproperty.hpp"

#include "SireMol/atomvelocities.h"

#include "SireMol/bondid.h"

#include "SireMol/bondorder.h"

#include "SireMol/connectivity.h"

#include "SireMol/core.h"

#include "SireMol/moleditor.h"

#include "SireMol/selectorm.hpp"

#include "SireStream/datastream.h"

#include "SireStream/shareddatastream.h"

#include "SireSystem/forcefieldinfo.h"

#include "SireUnits/units.h"

#include "SireVol/periodicbox.h"

#include "SireVol/triclinicbox.h"

#include "openmmmolecule.h"

#include "sire_openmm.h"

#include "tostring.h"

#include <OpenMM.h>

#include <QDebug>

#include "SireBase/parallel.h"

#include "SireBase/propertylist.h"

#include "SireCAS/lambdaschedule.h"

#include "SireError/errors.h"

#include "SireMM/amberparams.h"

#include "SireMM/atomljs.h"

#include "SireMM/selectorbond.h"

#include "SireMaths/vector.h"

#include "SireMol/atomcharges.h"

#include "SireMol/atomcoords.h"

#include "SireMol/atomelements.h"

#include "SireMol/atommasses.h"

#include "SireMol/atomproperty.hpp"

#include "SireMol/atomvelocities.h"

#include "SireMol/bondid.h"

#include "SireMol/bondorder.h"

#include "SireMol/connectivity.h"

#include "SireMol/core.h"

#include "SireMol/moleditor.h"

#include "SireMol/selectorm.hpp"

#include "SireStream/datastream.h"

#include "SireStream/shareddatastream.h"

#include "SireSystem/forcefieldinfo.h"

#include "SireUnits/units.h"

#include "SireVol/periodicbox.h"

#include "SireVol/triclinicbox.h"

#include "openmmmolecule.h"

#include "sire_openmm.h"

#include "tostring.h"

#include <OpenMM.h>

#include <QDebug>

#include "SireBase/parallel.h"

#include "SireBase/propertylist.h"

#include "SireCAS/lambdaschedule.h"

#include "SireError/errors.h"

#include "SireMM/amberparams.h"

#include "SireMM/atomljs.h"

#include "SireMM/selectorbond.h"

#include "SireMaths/vector.h"

#include "SireMol/atomcharges.h"

#include "SireMol/atomcoords.h"

#include "SireMol/atomelements.h"

#include "SireMol/atommasses.h"

#include "SireMol/atomproperty.hpp"

#include "SireMol/atomvelocities.h"

#include "SireMol/bondid.h"

#include "SireMol/bondorder.h"

#include "SireMol/connectivity.h"

#include "SireMol/core.h"

#include "SireMol/moleditor.h"

#include "SireMol/selectorm.hpp"

#include "SireStream/datastream.h"

#include "SireStream/shareddatastream.h"

#include "SireSystem/forcefieldinfo.h"

#include "SireUnits/units.h"

#include "SireVol/periodicbox.h"

#include "SireVol/triclinicbox.h"

#include "openmmmolecule.h"

#include "sire_openmm.h"

#include "tostring.h"

#include <OpenMM.h>

#include <QDebug>

#include "SireBase/parallel.h"

#include "SireBase/propertylist.h"

#include "SireCAS/lambdaschedule.h"

#include "SireError/errors.h"

#include "SireMM/amberparams.h"

#include "SireMM/atomljs.h"

#include "SireMM/selectorbond.h"

#include "SireMaths/vector.h"

#include "SireMol/atomcharges.h"

#include "SireMol/atomcoords.h"

#include "SireMol/atomelements.h"

#include "SireMol/atommasses.h"

#include "SireMol/atomproperty.hpp"

#include "SireMol/atomvelocities.h"

#include "SireMol/bondid.h"

#include "SireMol/bondorder.h"

#include "SireMol/connectivity.h"

#include "SireMol/core.h"

#include "SireMol/moleditor.h"

#include "SireMol/selectorm.hpp"

#include "SireStream/datastream.h"

#include "SireStream/shareddatastream.h"

#include "SireSystem/forcefieldinfo.h"

#include "SireUnits/units.h"

#include "SireVol/periodicbox.h"

#include "SireVol/triclinicbox.h"

#include "openmmmolecule.h"

#include "sire_openmm.h"

#include "tostring.h"

#include <OpenMM.h>

#include <QDebug>

#include "SireBase/parallel.h"

#include "SireBase/propertylist.h"

#include "SireCAS/lambdaschedule.h"

#include "SireError/errors.h"

#include "SireMM/amberparams.h"

#include "SireMM/atomljs.h"

#include "SireMM/selectorbond.h"

#include "SireMaths/vector.h"

#include "SireMol/atomcharges.h"

#include "SireMol/atomcoords.h"

#include "SireMol/atomelements.h"

#include "SireMol/atommasses.h"

#include "SireMol/atomproperty.hpp"

#include "SireMol/atomvelocities.h"

#include "SireMol/bondid.h"

#include "SireMol/bondorder.h"

#include "SireMol/connectivity.h"

#include "SireMol/core.h"

#include "SireMol/moleditor.h"

#include "SireMol/selectorm.hpp"

#include "SireStream/datastream.h"

#include "SireStream/shareddatastream.h"

#include "SireSystem/forcefieldinfo.h"

#include "SireUnits/units.h"

#include "SireVol/periodicbox.h"

#include "SireVol/triclinicbox.h"

#include "openmmmolecule.h"

#include "sire_openmm.h"

#include "tostring.h"

#include <OpenMM.h>

#include <QDebug>

#include "SireBase/parallel.h"

#include "SireBase/propertylist.h"

#include "SireCAS/lambdaschedule.h"

#include "SireError/errors.h"

#include "SireMM/amberparams.h"

#include "SireMM/atomljs.h"

#include "SireMM/selectorbond.h"

#include "SireMaths/vector.h"

#include "SireMol/atomcharges.h"

#include "SireMol/atomcoords.h"

#include "SireMol/atomelements.h"

#include "SireMol/atommasses.h"

#include "SireMol/atomproperty.hpp"

#include "SireMol/atomvelocities.h"

#include "SireMol/bondid.h"

#include "SireMol/bondorder.h"

#include "SireMol/connectivity.h"

#include "SireMol/core.h"

#include "SireMol/moleditor.h"

#include "SireMol/selectorm.hpp"

#include "SireStream/datastream.h"

#include "SireStream/shareddatastream.h"

#include "SireSystem/forcefieldinfo.h"

#include "SireUnits/units.h"

#include "SireVol/periodicbox.h"

#include "SireVol/triclinicbox.h"

#include "openmmmolecule.h"

#include "sire_openmm.h"

#include "tostring.h"

#include <OpenMM.h>

#include <QDebug>

#include "SireBase/parallel.h"

#include "SireBase/propertylist.h"

#include "SireCAS/lambdaschedule.h"

#include "SireError/errors.h"

#include "SireMM/amberparams.h"

#include "SireMM/atomljs.h"

#include "SireMM/selectorbond.h"

#include "SireMaths/vector.h"

#include "SireMol/atomcharges.h"

#include "SireMol/atomcoords.h"

#include "SireMol/atomelements.h"

#include "SireMol/atommasses.h"

#include "SireMol/atomproperty.hpp"

#include "SireMol/atomvelocities.h"

#include "SireMol/bondid.h"

#include "SireMol/bondorder.h"

#include "SireMol/connectivity.h"

#include "SireMol/core.h"

#include "SireMol/moleditor.h"

#include "SireMol/selectorm.hpp"

#include "SireStream/datastream.h"

#include "SireStream/shareddatastream.h"

#include "SireSystem/forcefieldinfo.h"

#include "SireUnits/units.h"

#include "SireVol/periodicbox.h"

#include "SireVol/triclinicbox.h"

#include "openmmmolecule.h"

#include "sire_openmm.h"

#include "tostring.h"

#include <OpenMM.h>

#include <QDebug>

#include "SireBase/parallel.h"

#include "SireBase/propertylist.h"

#include "SireCAS/lambdaschedule.h"

#include "SireError/errors.h"

#include "SireMM/amberparams.h"

#include "SireMM/atomljs.h"

#include "SireMM/selectorbond.h"

#include "SireMaths/vector.h"

#include "SireMol/atomcharges.h"

#include "SireMol/atomcoords.h"

#include "SireMol/atomelements.h"

#include "SireMol/atommasses.h"

#include "SireMol/atomproperty.hpp"

#include "SireMol/atomvelocities.h"

#include "SireMol/bondid.h"

#include "SireMol/bondorder.h"

#include "SireMol/connectivity.h"

#include "SireMol/core.h"

#include "SireMol/moleditor.h"

#include "SireMol/selectorm.hpp"

#include "SireStream/datastream.h"

#include "SireStream/shareddatastream.h"

#include "SireSystem/forcefieldinfo.h"

#include "SireUnits/units.h"

#include "SireVol/periodicbox.h"

#include "SireVol/triclinicbox.h"

#include "openmmmolecule.h"

#include "sire_openmm.h"

#include "tostring.h"

#include <OpenMM.h>

#include <QDebug>

#include "SireBase/parallel.h"

#include "SireBase/propertylist.h"

#include "SireCAS/lambdaschedule.h"

#include "SireError/errors.h"

#include "SireMM/amberparams.h"

#include "SireMM/atomljs.h"

#include "SireMM/selectorbond.h"

#include "SireMaths/vector.h"

#include "SireMol/atomcharges.h"

#include "SireMol/atomcoords.h"

#include "SireMol/atomelements.h"

#include "SireMol/atommasses.h"

#include "SireMol/atomproperty.hpp"

#include "SireMol/atomvelocities.h"

#include "SireMol/bondid.h"

#include "SireMol/bondorder.h"

#include "SireMol/connectivity.h"

#include "SireMol/core.h"

#include "SireMol/moleditor.h"

#include "SireMol/selectorm.hpp"

#include "SireStream/datastream.h"

#include "SireStream/shareddatastream.h"

#include "SireSystem/forcefieldinfo.h"

#include "SireUnits/units.h"

#include "SireVol/periodicbox.h"

#include "SireVol/triclinicbox.h"

#include "openmmmolecule.h"

#include "sire_openmm.h"

#include "tostring.h"

#include <OpenMM.h>

#include <QDebug>

#include "SireBase/parallel.h"

#include "SireBase/propertylist.h"

#include "SireCAS/lambdaschedule.h"

#include "SireError/errors.h"

#include "SireMM/amberparams.h"

#include "SireMM/atomljs.h"

#include "SireMM/selectorbond.h"

#include "SireMaths/vector.h"

#include "SireMol/atomcharges.h"

#include "SireMol/atomcoords.h"

#include "SireMol/atomelements.h"

#include "SireMol/atommasses.h"

#include "SireMol/atomproperty.hpp"

#include "SireMol/atomvelocities.h"

#include "SireMol/bondid.h"

#include "SireMol/bondorder.h"

#include "SireMol/connectivity.h"

#include "SireMol/core.h"

#include "SireMol/moleditor.h"

#include "SireMol/selectorm.hpp"

#include "SireStream/datastream.h"

#include "SireStream/shareddatastream.h"

#include "SireSystem/forcefieldinfo.h"

#include "SireUnits/units.h"

#include "SireVol/periodicbox.h"

#include "SireVol/triclinicbox.h"

#include "openmmmolecule.h"

#include "sire_openmm.h"

#include "tostring.h"

#include <OpenMM.h>

#include <QDebug>

#include "SireBase/parallel.h"

#include "SireBase/propertylist.h"

#include "SireCAS/lambdaschedule.h"

#include "SireError/errors.h"

#include "SireMM/amberparams.h"

#include "SireMM/atomljs.h"

#include "SireMM/selectorbond.h"

#include "SireMaths/vector.h"

#include "SireMol/atomcharges.h"

#include "SireMol/atomcoords.h"

#include "SireMol/atomelements.h"

#include "SireMol/atommasses.h"

#include "SireMol/atomproperty.hpp"

#include "SireMol/atomvelocities.h"

#include "SireMol/bondid.h"

#include "SireMol/bondorder.h"

#include "SireMol/connectivity.h"

#include "SireMol/core.h"

#include "SireMol/moleditor.h"

#include "SireMol/selectorm.hpp"

#include "SireStream/datastream.h"

#include "SireStream/shareddatastream.h"

#include "SireSystem/forcefieldinfo.h"

#include "SireUnits/units.h"

#include "SireVol/periodicbox.h"

#include "SireVol/triclinicbox.h"

#include "openmmmolecule.h"

#include "sire_openmm.h"

#include "tostring.h"

#include <OpenMM.h>

#include <QDebug>

#include "SireBase/parallel.h"

#include "SireBase/propertylist.h"

#include "SireCAS/lambdaschedule.h"

#include "SireError/errors.h"

#include "SireMM/amberparams.h"

#include "SireMM/atomljs.h"

#include "SireMM/selectorbond.h"

#include "SireMaths/vector.h"

#include "SireMol/atomcharges.h"

#include "SireMol/atomcoords.h"

#include "SireMol/atomelements.h"

#include "SireMol/atommasses.h"

#include "SireMol/atomproperty.hpp"

#include "SireMol/atomvelocities.h"

#include "SireMol/bondid.h"

#include "SireMol/bondorder.h"

#include "SireMol/connectivity.h"

#include "SireMol/core.h"

#include "SireMol/moleditor.h"

#include "SireMol/selectorm.hpp"

#include "SireStream/datastream.h"

#include "SireStream/shareddatastream.h"

#include "SireSystem/forcefieldinfo.h"

#include "SireUnits/units.h"

#include "SireVol/periodicbox.h"

#include "SireVol/triclinicbox.h"

#include "openmmmolecule.h"

#include "sire_openmm.h"

#include "tostring.h"

#include <OpenMM.h>

#include <QDebug>

#include "SireBase/parallel.h"

#include "SireBase/propertylist.h"

#include "SireCAS/lambdaschedule.h"

#include "SireError/errors.h"

#include "SireMM/amberparams.h"

#include "SireMM/atomljs.h"

#include "SireMM/selectorbond.h"

#include "SireMaths/vector.h"

#include "SireMol/atomcharges.h"

#include "SireMol/atomcoords.h"

#include "SireMol/atomelements.h"

#include "SireMol/atommasses.h"

#include "SireMol/atomproperty.hpp"

#include "SireMol/atomvelocities.h"

#include "SireMol/bondid.h"

#include "SireMol/bondorder.h"

#include "SireMol/connectivity.h"

#include "SireMol/core.h"

#include "SireMol/moleditor.h"

#include "SireMol/selectorm.hpp"

#include "SireStream/datastream.h"

#include "SireStream/shareddatastream.h"

#include "SireSystem/forcefieldinfo.h"

#include "SireUnits/units.h"

#include "SireVol/periodicbox.h"

#include "SireVol/triclinicbox.h"

#include "openmmmolecule.h"

#include "sire_openmm.h"

#include "tostring.h"

#include <OpenMM.h>

#include <QDebug>

#include "SireBase/parallel.h"

#include "SireBase/propertylist.h"

#include "SireCAS/lambdaschedule.h"

#include "SireError/errors.h"

#include "SireMM/amberparams.h"

#include "SireMM/atomljs.h"

#include "SireMM/selectorbond.h"

#include "SireMaths/vector.h"

#include "SireMol/atomcharges.h"

#include "SireMol/atomcoords.h"

#include "SireMol/atomelements.h"

#include "SireMol/atommasses.h"

#include "SireMol/atomproperty.hpp"

#include "SireMol/atomvelocities.h"

#include "SireMol/bondid.h"

#include "SireMol/bondorder.h"

#include "SireMol/connectivity.h"

#include "SireMol/core.h"

#include "SireMol/moleditor.h"

#include "SireMol/selectorm.hpp"

#include "SireStream/datastream.h"

#include "SireStream/shareddatastream.h"

#include "SireSystem/forcefieldinfo.h"

#include "SireUnits/units.h"

#include "SireVol/periodicbox.h"

#include "SireVol/triclinicbox.h"

#include "openmmmolecule.h"

#include "sire_openmm.h"

#include "tostring.h"

#include <OpenMM.h>

#include <QDebug>

#include "SireBase/parallel.h"

#include "SireBase/propertylist.h"

#include "SireCAS/lambdaschedule.h"

#include "SireError/errors.h"

#include "SireMM/amberparams.h"

#include "SireMM/atomljs.h"

#include "SireMM/selectorbond.h"

#include "SireMaths/vector.h"

#include "SireMol/atomcharges.h"

#include "SireMol/atomcoords.h"

#include "SireMol/atomelements.h"

#include "SireMol/atommasses.h"

#include "SireMol/atomproperty.hpp"

#include "SireMol/atomvelocities.h"

#include "SireMol/bondid.h"

#include "SireMol/bondorder.h"

#include "SireMol/connectivity.h"

#include "SireMol/core.h"

#include "SireMol/moleditor.h"

#include "SireMol/selectorm.hpp"

#include "SireStream/datastream.h"

#include "SireStream/shareddatastream.h"

#include "SireSystem/forcefieldinfo.h"

#include "SireUnits/units.h"

#include "SireVol/periodicbox.h"

#include "SireVol/triclinicbox.h"

#include "openmmmolecule.h"

#include "sire_openmm.h"

#include "tostring.h"

#include <OpenMM.h>

#include <QDebug>

#include "SireBase/parallel.h"

#include "SireBase/propertylist.h"

#include "SireCAS/lambdaschedule.h"

#include "SireError/errors.h"

#include "SireMM/amberparams.h"

#include "SireMM/atomljs.h"

#include "SireMM/selectorbond.h"

#include "SireMaths/vector.h"

#include "SireMol/atomcharges.h"

#include "SireMol/atomcoords.h"

#include "SireMol/atomelements.h"

#include "SireMol/atommasses.h"

#include "SireMol/atomproperty.hpp"

#include "SireMol/atomvelocities.h"

#include "SireMol/bondid.h"

#include "SireMol/bondorder.h"

#include "SireMol/connectivity.h"

#include "SireMol/core.h"

#include "SireMol/moleditor.h"

#include "SireMol/selectorm.hpp"

#include "SireStream/datastream.h"

#include "SireStream/shareddatastream.h"

#include "SireSystem/forcefieldinfo.h"

#include "SireUnits/units.h"

#include "SireVol/periodicbox.h"

#include "SireVol/triclinicbox.h"

#include "openmmmolecule.h"

#include "sire_openmm.h"

#include "tostring.h"

#include <OpenMM.h>

#include <QDebug>

#include "SireBase/parallel.h"

#include "SireBase/propertylist.h"

#include "SireCAS/lambdaschedule.h"

#include "SireError/errors.h"

#include "SireMM/amberparams.h"

#include "SireMM/atomljs.h"

#include "SireMM/selectorbond.h"

#include "SireMaths/vector.h"

#include "SireMol/atomcharges.h"

#include "SireMol/atomcoords.h"

#include "SireMol/atomelements.h"

#include "SireMol/atommasses.h"

#include "SireMol/atomproperty.hpp"

#include "SireMol/atomvelocities.h"

#include "SireMol/bondid.h"

#include "SireMol/bondorder.h"

#include "SireMol/connectivity.h"

#include "SireMol/core.h"

#include "SireMol/moleditor.h"

#include "SireMol/selectorm.hpp"

#include "SireStream/datastream.h"

#include "SireStream/shareddatastream.h"

#include "SireSystem/forcefieldinfo.h"

#include "SireUnits/units.h"

#include "SireVol/periodicbox.h"

#include "SireVol/triclinicbox.h"

#include "openmmmolecule.h"

#include "sire_openmm.h"

#include "tostring.h"

#include <OpenMM.h>

#include <QDebug>

#include "SireBase/parallel.h"

#include "SireBase/propertylist.h"

#include "SireCAS/lambdaschedule.h"

#include "SireError/errors.h"

#include "SireMM/amberparams.h"

#include "SireMM/atomljs.h"

#include "SireMM/selectorbond.h"

#include "SireMaths/vector.h"

#include "SireMol/atomcharges.h"

#include "SireMol/atomcoords.h"

#include "SireMol/atomelements.h"

#include "SireMol/atommasses.h"

#include "SireMol/atomproperty.hpp"

#include "SireMol/atomvelocities.h"

#include "SireMol/bondid.h"

#include "SireMol/bondorder.h"

#include "SireMol/connectivity.h"

#include "SireMol/core.h"

#include "SireMol/moleditor.h"

#include "SireMol/selectorm.hpp"

#include "SireStream/datastream.h"

#include "SireStream/shareddatastream.h"

#include "SireSystem/forcefieldinfo.h"

#include "SireUnits/units.h"

#include "SireVol/periodicbox.h"

#include "SireVol/triclinicbox.h"

#include "openmmmolecule.h"

#include "sire_openmm.h"

#include "tostring.h"

#include <OpenMM.h>

#include <QDebug>

#include "SireBase/parallel.h"

#include "SireBase/propertylist.h"

#include "SireCAS/lambdaschedule.h"

#include "SireError/errors.h"

#include "SireMM/amberparams.h"

#include "SireMM/atomljs.h"

#include "SireMM/selectorbond.h"

#include "SireMaths/vector.h"

#include "SireMol/atomcharges.h"

#include "SireMol/atomcoords.h"

#include "SireMol/atomelements.h"

#include "SireMol/atommasses.h"

#include "SireMol/atomproperty.hpp"

#include "SireMol/atomvelocities.h"

#include "SireMol/bondid.h"

#include "SireMol/bondorder.h"

#include "SireMol/connectivity.h"

#include "SireMol/core.h"

#include "SireMol/moleditor.h"

#include "SireMol/selectorm.hpp"

#include "SireStream/datastream.h"

#include "SireStream/shareddatastream.h"

#include "SireSystem/forcefieldinfo.h"

#include "SireUnits/units.h"

#include "SireVol/periodicbox.h"

#include "SireVol/triclinicbox.h"

#include "openmmmolecule.h"

#include "sire_openmm.h"

#include "tostring.h"

#include <OpenMM.h>

#include <QDebug>

#include "SireBase/parallel.h"

#include "SireBase/propertylist.h"

#include "SireCAS/lambdaschedule.h"

#include "SireError/errors.h"

#include "SireMM/amberparams.h"

#include "SireMM/atomljs.h"

#include "SireMM/selectorbond.h"

#include "SireMaths/vector.h"

#include "SireMol/atomcharges.h"

#include "SireMol/atomcoords.h"

#include "SireMol/atomelements.h"

#include "SireMol/atommasses.h"

#include "SireMol/atomproperty.hpp"

#include "SireMol/atomvelocities.h"

#include "SireMol/bondid.h"

#include "SireMol/bondorder.h"

#include "SireMol/connectivity.h"

#include "SireMol/core.h"

#include "SireMol/moleditor.h"

#include "SireMol/selectorm.hpp"

#include "SireStream/datastream.h"

#include "SireStream/shareddatastream.h"

#include "SireSystem/forcefieldinfo.h"

#include "SireUnits/units.h"

#include "SireVol/periodicbox.h"

#include "SireVol/triclinicbox.h"

#include "openmmmolecule.h"

#include "sire_openmm.h"

#include "tostring.h"

#include <OpenMM.h>

#include <QDebug>

#include "SireBase/parallel.h"

#include "SireBase/propertylist.h"

#include "SireCAS/lambdaschedule.h"

#include "SireError/errors.h"

#include "SireMM/amberparams.h"

#include "SireMM/atomljs.h"

#include "SireMM/selectorbond.h"

#include "SireMaths/vector.h"

#include "SireMol/atomcharges.h"

#include "SireMol/atomcoords.h"

#include "SireMol/atomelements.h"

#include "SireMol/atommasses.h"

#include "SireMol/atomproperty.hpp"

#include "SireMol/atomvelocities.h"

#include "SireMol/bondid.h"

#include "SireMol/bondorder.h"

#include "SireMol/connectivity.h"

#include "SireMol/core.h"

#include "SireMol/moleditor.h"

#include "SireMol/selectorm.hpp"

#include "SireStream/datastream.h"

#include "SireStream/shareddatastream.h"

#include "SireSystem/forcefieldinfo.h"

#include "SireUnits/units.h"

#include "SireVol/periodicbox.h"

#include "SireVol/triclinicbox.h"

#include "openmmmolecule.h"

#include "sire_openmm.h"

#include "tostring.h"

#include <OpenMM.h>

#include <QDebug>

#include "SireBase/parallel.h"

#include "SireBase/propertylist.h"

#include "SireCAS/lambdaschedule.h"

#include "SireError/errors.h"

#include "SireMM/amberparams.h"

#include "SireMM/atomljs.h"

#include "SireMM/selectorbond.h"

#include "SireMaths/vector.h"

#include "SireMol/atomcharges.h"

#include "SireMol/atomcoords.h"

#include "SireMol/atomelements.h"

#include "SireMol/atommasses.h"

#include "SireMol/atomproperty.hpp"

#include "SireMol/atomvelocities.h"

#include "SireMol/bondid.h"

#include "SireMol/bondorder.h"

#include "SireMol/connectivity.h"

#include "SireMol/core.h"

#include "SireMol/moleditor.h"

#include "SireMol/selectorm.hpp"

#include "SireStream/datastream.h"

#include "SireStream/shareddatastream.h"

#include "SireSystem/forcefieldinfo.h"

#include "SireUnits/units.h"

#include "SireVol/periodicbox.h"

#include "SireVol/triclinicbox.h"

#include "openmmmolecule.h"

#include "sire_openmm.h"

#include "tostring.h"

#include <OpenMM.h>

#include <QDebug>

#include "SireBase/parallel.h"

#include "SireBase/propertylist.h"

#include "SireCAS/lambdaschedule.h"

#include "SireError/errors.h"

#include "SireMM/amberparams.h"

#include "SireMM/atomljs.h"

#include "SireMM/selectorbond.h"

#include "SireMaths/vector.h"

#include "SireMol/atomcharges.h"

#include "SireMol/atomcoords.h"

#include "SireMol/atomelements.h"

#include "SireMol/atommasses.h"

#include "SireMol/atomproperty.hpp"

#include "SireMol/atomvelocities.h"

#include "SireMol/bondid.h"

#include "SireMol/bondorder.h"

#include "SireMol/connectivity.h"

#include "SireMol/core.h"

#include "SireMol/moleditor.h"

#include "SireMol/selectorm.hpp"

#include "SireStream/datastream.h"

#include "SireStream/shareddatastream.h"

#include "SireSystem/forcefieldinfo.h"

#include "SireUnits/units.h"

#include "SireVol/periodicbox.h"

#include "SireVol/triclinicbox.h"

#include "openmmmolecule.h"

#include "sire_openmm.h"

#include "tostring.h"

#include <OpenMM.h>

#include <QDebug>

#include "SireBase/parallel.h"

#include "SireBase/propertylist.h"

#include "SireCAS/lambdaschedule.h"

#include "SireError/errors.h"

#include "SireMM/amberparams.h"

#include "SireMM/atomljs.h"

#include "SireMM/selectorbond.h"

#include "SireMaths/vector.h"

#include "SireMol/atomcharges.h"

#include "SireMol/atomcoords.h"

#include "SireMol/atomelements.h"

#include "SireMol/atommasses.h"

#include "SireMol/atomproperty.hpp"

#include "SireMol/atomvelocities.h"

#include "SireMol/bondid.h"

#include "SireMol/bondorder.h"

#include "SireMol/connectivity.h"

#include "SireMol/core.h"

#include "SireMol/moleditor.h"

#include "SireMol/selectorm.hpp"

#include "SireStream/datastream.h"

#include "SireStream/shareddatastream.h"

#include "SireSystem/forcefieldinfo.h"

#include "SireUnits/units.h"

#include "SireVol/periodicbox.h"

#include "SireVol/triclinicbox.h"

#include "openmmmolecule.h"

#include "sire_openmm.h"

#include "tostring.h"

#include <OpenMM.h>

#include <QDebug>

#include "SireBase/progressbar.h"

#include "SireBase/releasegil.h"

#include "SireError/errors.h"

#include "SireUnits/units.h"

#include "lbgfs/lbfgs.h"

#include "openmm/OpenMMException.h"

#include "openmm/Platform.h"

#include "openmm/VerletIntegrator.h"

#include "openmmminimise.h"

#include <QDebug>

#include <algorithm>

#include <cmath>

#include <iomanip>

#include <iostream>

#include <limits.h>

#include <limits>

#include <sstream>

#include <stdint.h>

#include <string>

#include <vector>

#include "SireBase/progressbar.h"

#include "SireBase/releasegil.h"

#include "SireError/errors.h"

#include "SireUnits/units.h"

#include "lbgfs/lbfgs.h"

#include "openmm/OpenMMException.h"

#include "openmm/Platform.h"

#include "openmm/VerletIntegrator.h"

#include "openmmminimise.h"

#include <QDebug>

#include <algorithm>

#include <cmath>

#include <iomanip>

#include <iostream>

#include <limits.h>

#include <limits>

#include <sstream>

#include <stdint.h>

#include <string>

#include <vector>

#include "SireBase/progressbar.h"

#include "SireBase/releasegil.h"

#include "SireError/errors.h"

#include "SireUnits/units.h"

#include "lbgfs/lbfgs.h"

#include "openmm/OpenMMException.h"

#include "openmm/Platform.h"

#include "openmm/VerletIntegrator.h"

#include "openmmminimise.h"

#include <QDebug>

#include <algorithm>

#include <cmath>

#include <iomanip>

#include <iostream>

#include <limits.h>

#include <limits>

#include <sstream>

#include <stdint.h>

#include <string>

#include <vector>

#include "SireBase/progressbar.h"

#include "SireBase/releasegil.h"

#include "SireError/errors.h"

#include "SireUnits/units.h"

#include "lbgfs/lbfgs.h"

#include "openmm/OpenMMException.h"

#include "openmm/Platform.h"

#include "openmm/VerletIntegrator.h"

#include "openmmminimise.h"

#include <QDebug>

#include <algorithm>

#include <cmath>

#include <iomanip>

#include <iostream>

#include <limits.h>

#include <limits>

#include <sstream>

#include <stdint.h>

#include <string>

#include <vector>

#include "SireBase/parallel.h"

#include "SireBase/propertylist.h"

#include "SireCAS/lambdaschedule.h"

#include "SireError/errors.h"

#include "SireMM/amberparams.h"

#include "SireMM/atomljs.h"

#include "SireMM/selectorbond.h"

#include "SireMaths/vector.h"

#include "SireMol/atomcharges.h"

#include "SireMol/atomcoords.h"

#include "SireMol/atomelements.h"

#include "SireMol/atommasses.h"

#include "SireMol/atomproperty.hpp"

#include "SireMol/atomvelocities.h"

#include "SireMol/bondid.h"

#include "SireMol/bondorder.h"

#include "SireMol/connectivity.h"

#include "SireMol/core.h"

#include "SireMol/moleditor.h"

#include "SireMol/selectorm.hpp"

#include "SireStream/datastream.h"

#include "SireStream/shareddatastream.h"

#include "SireSystem/forcefieldinfo.h"

#include "SireUnits/units.h"

#include "SireVol/periodicbox.h"

#include "SireVol/triclinicbox.h"

#include "openmmmolecule.h"

#include "sire_openmm.h"

#include "tostring.h"

#include <OpenMM.h>

#include <QDebug>

#include "SireBase/parallel.h"

#include "SireBase/propertylist.h"

#include "SireCAS/lambdaschedule.h"

#include "SireError/errors.h"

#include "SireMM/amberparams.h"

#include "SireMM/atomljs.h"

#include "SireMM/selectorbond.h"

#include "SireMaths/vector.h"

#include "SireMol/atomcharges.h"

#include "SireMol/atomcoords.h"

#include "SireMol/atomelements.h"

#include "SireMol/atommasses.h"

#include "SireMol/atomproperty.hpp"

#include "SireMol/atomvelocities.h"

#include "SireMol/bondid.h"

#include "SireMol/bondorder.h"

#include "SireMol/connectivity.h"

#include "SireMol/core.h"

#include "SireMol/moleditor.h"

#include "SireMol/selectorm.hpp"

#include "SireStream/datastream.h"

#include "SireStream/shareddatastream.h"

#include "SireSystem/forcefieldinfo.h"

#include "SireUnits/units.h"

#include "SireVol/periodicbox.h"

#include "SireVol/triclinicbox.h"

#include "openmmmolecule.h"

#include "sire_openmm.h"

#include "tostring.h"

#include <OpenMM.h>

#include <QDebug>

#include "SireBase/parallel.h"

#include "SireBase/propertylist.h"

#include "SireCAS/lambdaschedule.h"

#include "SireError/errors.h"

#include "SireMM/amberparams.h"

#include "SireMM/atomljs.h"

#include "SireMM/selectorbond.h"

#include "SireMaths/vector.h"

#include "SireMol/atomcharges.h"

#include "SireMol/atomcoords.h"

#include "SireMol/atomelements.h"

#include "SireMol/atommasses.h"

#include "SireMol/atomproperty.hpp"

#include "SireMol/atomvelocities.h"

#include "SireMol/bondid.h"

#include "SireMol/bondorder.h"

#include "SireMol/connectivity.h"

#include "SireMol/core.h"

#include "SireMol/moleditor.h"

#include "SireMol/selectorm.hpp"

#include "SireStream/datastream.h"

#include "SireStream/shareddatastream.h"

#include "SireSystem/forcefieldinfo.h"

#include "SireUnits/units.h"

#include "SireVol/periodicbox.h"

#include "SireVol/triclinicbox.h"

#include "openmmmolecule.h"

#include "sire_openmm.h"

#include "tostring.h"

#include <OpenMM.h>

#include <QDebug>

#include "SireBase/parallel.h"

#include "SireBase/propertylist.h"

#include "SireCAS/lambdaschedule.h"

#include "SireError/errors.h"

#include "SireMM/amberparams.h"

#include "SireMM/atomljs.h"

#include "SireMM/selectorbond.h"

#include "SireMaths/vector.h"

#include "SireMol/atomcharges.h"

#include "SireMol/atomcoords.h"

#include "SireMol/atomelements.h"

#include "SireMol/atommasses.h"

#include "SireMol/atomproperty.hpp"

#include "SireMol/atomvelocities.h"

#include "SireMol/bondid.h"

#include "SireMol/bondorder.h"

#include "SireMol/connectivity.h"

#include "SireMol/core.h"

#include "SireMol/moleditor.h"

#include "SireMol/selectorm.hpp"

#include "SireStream/datastream.h"

#include "SireStream/shareddatastream.h"

#include "SireSystem/forcefieldinfo.h"

#include "SireUnits/units.h"

#include "SireVol/periodicbox.h"

#include "SireVol/triclinicbox.h"

#include "openmmmolecule.h"

#include "sire_openmm.h"

#include "tostring.h"

#include <OpenMM.h>

#include <QDebug>

#include "SireBase/parallel.h"

#include "SireBase/propertylist.h"

#include "SireCAS/lambdaschedule.h"

#include "SireError/errors.h"

#include "SireMM/amberparams.h"

#include "SireMM/atomljs.h"

#include "SireMM/selectorbond.h"

#include "SireMaths/vector.h"

#include "SireMol/atomcharges.h"

#include "SireMol/atomcoords.h"

#include "SireMol/atomelements.h"

#include "SireMol/atommasses.h"

#include "SireMol/atomproperty.hpp"

#include "SireMol/atomvelocities.h"

#include "SireMol/bondid.h"

#include "SireMol/bondorder.h"

#include "SireMol/connectivity.h"

#include "SireMol/core.h"

#include "SireMol/moleditor.h"

#include "SireMol/selectorm.hpp"

#include "SireStream/datastream.h"

#include "SireStream/shareddatastream.h"

#include "SireSystem/forcefieldinfo.h"

#include "SireUnits/units.h"

#include "SireVol/periodicbox.h"

#include "SireVol/triclinicbox.h"

#include "openmmmolecule.h"

#include "sire_openmm.h"

#include "tostring.h"

#include <OpenMM.h>

#include <QDebug>

#include "SireBase/parallel.h"

#include "SireBase/propertylist.h"

#include "SireCAS/lambdaschedule.h"

#include "SireError/errors.h"

#include "SireMM/amberparams.h"

#include "SireMM/atomljs.h"

#include "SireMM/selectorbond.h"

#include "SireMaths/vector.h"

#include "SireMol/atomcharges.h"

#include "SireMol/atomcoords.h"

#include "SireMol/atomelements.h"

#include "SireMol/atommasses.h"

#include "SireMol/atomproperty.hpp"

#include "SireMol/atomvelocities.h"

#include "SireMol/bondid.h"

#include "SireMol/bondorder.h"

#include "SireMol/connectivity.h"

#include "SireMol/core.h"

#include "SireMol/moleditor.h"

#include "SireMol/selectorm.hpp"

#include "SireStream/datastream.h"

#include "SireStream/shareddatastream.h"

#include "SireSystem/forcefieldinfo.h"

#include "SireUnits/units.h"

#include "SireVol/periodicbox.h"

#include "SireVol/triclinicbox.h"

#include "openmmmolecule.h"

#include "sire_openmm.h"

#include "tostring.h"

#include <OpenMM.h>

#include <QDebug>

#include "SireBase/parallel.h"

#include "SireBase/propertylist.h"

#include "SireCAS/lambdaschedule.h"

#include "SireError/errors.h"

#include "SireMM/amberparams.h"

#include "SireMM/atomljs.h"

#include "SireMM/selectorbond.h"

#include "SireMaths/vector.h"

#include "SireMol/atomcharges.h"

#include "SireMol/atomcoords.h"

#include "SireMol/atomelements.h"

#include "SireMol/atommasses.h"

#include "SireMol/atomproperty.hpp"

#include "SireMol/atomvelocities.h"

#include "SireMol/bondid.h"

#include "SireMol/bondorder.h"

#include "SireMol/connectivity.h"

#include "SireMol/core.h"

#include "SireMol/moleditor.h"

#include "SireMol/selectorm.hpp"

#include "SireStream/datastream.h"

#include "SireStream/shareddatastream.h"

#include "SireSystem/forcefieldinfo.h"

#include "SireUnits/units.h"

#include "SireVol/periodicbox.h"

#include "SireVol/triclinicbox.h"

#include "openmmmolecule.h"

#include "sire_openmm.h"

#include "tostring.h"

#include <OpenMM.h>

#include <QDebug>

#include "SireBase/parallel.h"

#include "SireBase/propertylist.h"

#include "SireCAS/lambdaschedule.h"

#include "SireError/errors.h"

#include "SireMM/amberparams.h"

#include "SireMM/atomljs.h"

#include "SireMM/selectorbond.h"

#include "SireMaths/vector.h"

#include "SireMol/atomcharges.h"

#include "SireMol/atomcoords.h"

#include "SireMol/atomelements.h"

#include "SireMol/atommasses.h"

#include "SireMol/atomproperty.hpp"

#include "SireMol/atomvelocities.h"

#include "SireMol/bondid.h"

#include "SireMol/bondorder.h"

#include "SireMol/connectivity.h"

#include "SireMol/core.h"

#include "SireMol/moleditor.h"

#include "SireMol/selectorm.hpp"

#include "SireStream/datastream.h"

#include "SireStream/shareddatastream.h"

#include "SireSystem/forcefieldinfo.h"

#include "SireUnits/units.h"

#include "SireVol/periodicbox.h"

#include "SireVol/triclinicbox.h"

#include "openmmmolecule.h"

#include "sire_openmm.h"

#include "tostring.h"

#include <OpenMM.h>

#include <QDebug>

#include "SireBase/parallel.h"

#include "SireBase/propertylist.h"

#include "SireCAS/lambdaschedule.h"

#include "SireError/errors.h"

#include "SireMM/amberparams.h"

#include "SireMM/atomljs.h"

#include "SireMM/selectorbond.h"

#include "SireMaths/vector.h"

#include "SireMol/atomcharges.h"

#include "SireMol/atomcoords.h"

#include "SireMol/atomelements.h"

#include "SireMol/atommasses.h"

#include "SireMol/atomproperty.hpp"

#include "SireMol/atomvelocities.h"

#include "SireMol/bondid.h"

#include "SireMol/bondorder.h"

#include "SireMol/connectivity.h"

#include "SireMol/core.h"

#include "SireMol/moleditor.h"

#include "SireMol/selectorm.hpp"

#include "SireStream/datastream.h"

#include "SireStream/shareddatastream.h"

#include "SireSystem/forcefieldinfo.h"

#include "SireUnits/units.h"

#include "SireVol/periodicbox.h"

#include "SireVol/triclinicbox.h"

#include "openmmmolecule.h"

#include "sire_openmm.h"

#include "tostring.h"

#include <OpenMM.h>

#include <QDebug>

#include "SireBase/parallel.h"

#include "SireBase/propertylist.h"

#include "SireCAS/lambdaschedule.h"

#include "SireError/errors.h"

#include "SireMM/amberparams.h"

#include "SireMM/atomljs.h"

#include "SireMM/selectorbond.h"

#include "SireMaths/vector.h"

#include "SireMol/atomcharges.h"

#include "SireMol/atomcoords.h"

#include "SireMol/atomelements.h"

#include "SireMol/atommasses.h"

#include "SireMol/atomproperty.hpp"

#include "SireMol/atomvelocities.h"

#include "SireMol/bondid.h"

#include "SireMol/bondorder.h"

#include "SireMol/connectivity.h"

#include "SireMol/core.h"

#include "SireMol/moleditor.h"

#include "SireMol/selectorm.hpp"

#include "SireStream/datastream.h"

#include "SireStream/shareddatastream.h"

#include "SireSystem/forcefieldinfo.h"

#include "SireUnits/units.h"

#include "SireVol/periodicbox.h"

#include "SireVol/triclinicbox.h"

#include "openmmmolecule.h"

#include "sire_openmm.h"

#include "tostring.h"

#include <OpenMM.h>

#include <QDebug>

#include "SireBase/parallel.h"

#include "SireBase/propertylist.h"

#include "SireCAS/lambdaschedule.h"

#include "SireError/errors.h"

#include "SireMM/amberparams.h"

#include "SireMM/atomljs.h"

#include "SireMM/selectorbond.h"

#include "SireMaths/vector.h"

#include "SireMol/atomcharges.h"

#include "SireMol/atomcoords.h"

#include "SireMol/atomelements.h"

#include "SireMol/atommasses.h"

#include "SireMol/atomproperty.hpp"

#include "SireMol/atomvelocities.h"

#include "SireMol/bondid.h"

#include "SireMol/bondorder.h"

#include "SireMol/connectivity.h"

#include "SireMol/core.h"

#include "SireMol/moleditor.h"

#include "SireMol/selectorm.hpp"

#include "SireStream/datastream.h"

#include "SireStream/shareddatastream.h"

#include "SireSystem/forcefieldinfo.h"

#include "SireUnits/units.h"

#include "SireVol/periodicbox.h"

#include "SireVol/triclinicbox.h"

#include "openmmmolecule.h"

#include "sire_openmm.h"

#include "tostring.h"

#include <OpenMM.h>

#include <QDebug>

#include "SireBase/parallel.h"

#include "SireBase/propertylist.h"

#include "SireCAS/lambdaschedule.h"

#include "SireError/errors.h"

#include "SireMM/amberparams.h"

#include "SireMM/atomljs.h"

#include "SireMM/selectorbond.h"

#include "SireMaths/vector.h"

#include "SireMol/atomcharges.h"

#include "SireMol/atomcoords.h"

#include "SireMol/atomelements.h"

#include "SireMol/atommasses.h"

#include "SireMol/atomproperty.hpp"

#include "SireMol/atomvelocities.h"

#include "SireMol/bondid.h"

#include "SireMol/bondorder.h"

#include "SireMol/connectivity.h"

#include "SireMol/core.h"

#include "SireMol/moleditor.h"

#include "SireMol/selectorm.hpp"

#include "SireStream/datastream.h"

#include "SireStream/shareddatastream.h"

#include "SireSystem/forcefieldinfo.h"

#include "SireUnits/units.h"

#include "SireVol/periodicbox.h"

#include "SireVol/triclinicbox.h"

#include "openmmmolecule.h"

#include "sire_openmm.h"

#include "tostring.h"

#include <OpenMM.h>

#include <QDebug>

#include "SireBase/parallel.h"

#include "SireBase/propertylist.h"

#include "SireCAS/lambdaschedule.h"

#include "SireError/errors.h"

#include "SireMM/amberparams.h"

#include "SireMM/atomljs.h"

#include "SireMM/selectorbond.h"

#include "SireMaths/vector.h"

#include "SireMol/atomcharges.h"

#include "SireMol/atomcoords.h"

#include "SireMol/atomelements.h"

#include "SireMol/atommasses.h"

#include "SireMol/atomproperty.hpp"

#include "SireMol/atomvelocities.h"

#include "SireMol/bondid.h"

#include "SireMol/bondorder.h"

#include "SireMol/connectivity.h"

#include "SireMol/core.h"

#include "SireMol/moleditor.h"

#include "SireMol/selectorm.hpp"

#include "SireStream/datastream.h"

#include "SireStream/shareddatastream.h"

#include "SireSystem/forcefieldinfo.h"

#include "SireUnits/units.h"

#include "SireVol/periodicbox.h"

#include "SireVol/triclinicbox.h"

#include "openmmmolecule.h"

#include "sire_openmm.h"

#include "tostring.h"

#include <OpenMM.h>

#include <QDebug>

#include "SireBase/parallel.h"

#include "SireBase/propertylist.h"

#include "SireCAS/lambdaschedule.h"

#include "SireError/errors.h"

#include "SireMM/amberparams.h"

#include "SireMM/atomljs.h"

#include "SireMM/selectorbond.h"

#include "SireMaths/vector.h"

#include "SireMol/atomcharges.h"

#include "SireMol/atomcoords.h"

#include "SireMol/atomelements.h"

#include "SireMol/atommasses.h"

#include "SireMol/atomproperty.hpp"

#include "SireMol/atomvelocities.h"

#include "SireMol/bondid.h"

#include "SireMol/bondorder.h"

#include "SireMol/connectivity.h"

#include "SireMol/core.h"

#include "SireMol/moleditor.h"

#include "SireMol/selectorm.hpp"

#include "SireStream/datastream.h"

#include "SireStream/shareddatastream.h"

#include "SireSystem/forcefieldinfo.h"

#include "SireUnits/units.h"

#include "SireVol/periodicbox.h"

#include "SireVol/triclinicbox.h"

#include "openmmmolecule.h"

#include "sire_openmm.h"

#include "tostring.h"

#include <OpenMM.h>

#include <QDebug>

#include "SireBase/parallel.h"

#include "SireBase/propertylist.h"

#include "SireCAS/lambdaschedule.h"

#include "SireError/errors.h"

#include "SireMM/amberparams.h"

#include "SireMM/atomljs.h"

#include "SireMM/selectorbond.h"

#include "SireMaths/vector.h"

#include "SireMol/atomcharges.h"

#include "SireMol/atomcoords.h"

#include "SireMol/atomelements.h"

#include "SireMol/atommasses.h"

#include "SireMol/atomproperty.hpp"

#include "SireMol/atomvelocities.h"

#include "SireMol/bondid.h"

#include "SireMol/bondorder.h"

#include "SireMol/connectivity.h"

#include "SireMol/core.h"

#include "SireMol/moleditor.h"

#include "SireMol/selectorm.hpp"

#include "SireStream/datastream.h"

#include "SireStream/shareddatastream.h"

#include "SireSystem/forcefieldinfo.h"

#include "SireUnits/units.h"

#include "SireVol/periodicbox.h"

#include "SireVol/triclinicbox.h"

#include "openmmmolecule.h"

#include "sire_openmm.h"

#include "tostring.h"

#include <OpenMM.h>

#include <QDebug>

#include "SireBase/parallel.h"

#include "SireBase/propertylist.h"

#include "SireCAS/lambdaschedule.h"

#include "SireError/errors.h"

#include "SireMM/amberparams.h"

#include "SireMM/atomljs.h"

#include "SireMM/selectorbond.h"

#include "SireMaths/vector.h"

#include "SireMol/atomcharges.h"

#include "SireMol/atomcoords.h"

#include "SireMol/atomelements.h"

#include "SireMol/atommasses.h"

#include "SireMol/atomproperty.hpp"

#include "SireMol/atomvelocities.h"

#include "SireMol/bondid.h"

#include "SireMol/bondorder.h"

#include "SireMol/connectivity.h"

#include "SireMol/core.h"

#include "SireMol/moleditor.h"

#include "SireMol/selectorm.hpp"

#include "SireStream/datastream.h"

#include "SireStream/shareddatastream.h"

#include "SireSystem/forcefieldinfo.h"

#include "SireUnits/units.h"

#include "SireVol/periodicbox.h"

#include "SireVol/triclinicbox.h"

#include "openmmmolecule.h"

#include "sire_openmm.h"

#include "tostring.h"

#include <OpenMM.h>

#include <QDebug>

void register_free_functions(){

    { //::SireOpenMM::extract_coordinates
    
        typedef ::SireMol::SelectorM< SireMol::Atom > ( *extract_coordinates_function_type )( ::OpenMM::State const &,::SireMol::SelectorM< SireMol::Atom > const &,::QHash< SireMol::MolNum, SireBase::PropertyMap > const &,::SireBase::PropertyMap const & );
        extract_coordinates_function_type extract_coordinates_function_value( &::SireOpenMM::extract_coordinates );
        
        bp::def( 
            "extract_coordinates"
            , extract_coordinates_function_value
            , ( bp::arg("state"), bp::arg("mols"), bp::arg("perturbable_maps"), bp::arg("map") )
            , "" );
    
    }

    { //::SireOpenMM::extract_coordinates
    
        typedef ::SireMol::SelectorMol ( *extract_coordinates_function_type )( ::OpenMM::State const &,::SireMol::SelectorMol const &,::QHash< SireMol::MolNum, SireBase::PropertyMap > const &,::SireBase::PropertyMap const & );
        extract_coordinates_function_type extract_coordinates_function_value( &::SireOpenMM::extract_coordinates );
        
        bp::def( 
            "extract_coordinates"
            , extract_coordinates_function_value
            , ( bp::arg("state"), bp::arg("mols"), bp::arg("perturbable_maps"), bp::arg("map") )
            , "" );
    
    }

    { //::SireOpenMM::extract_coordinates_and_velocities
    
        typedef ::SireMol::SelectorM< SireMol::Atom > ( *extract_coordinates_and_velocities_function_type )( ::OpenMM::State const &,::SireMol::SelectorM< SireMol::Atom > const &,::QHash< SireMol::MolNum, SireBase::PropertyMap > const &,::SireBase::PropertyMap const & );
        extract_coordinates_and_velocities_function_type extract_coordinates_and_velocities_function_value( &::SireOpenMM::extract_coordinates_and_velocities );
        
        bp::def( 
            "extract_coordinates_and_velocities"
            , extract_coordinates_and_velocities_function_value
            , ( bp::arg("state"), bp::arg("mols"), bp::arg("perturbable_maps"), bp::arg("map") )
            , "" );
    
    }

    { //::SireOpenMM::extract_coordinates_and_velocities
    
        typedef ::SireMol::SelectorMol ( *extract_coordinates_and_velocities_function_type )( ::OpenMM::State const &,::SireMol::SelectorMol const &,::QHash< SireMol::MolNum, SireBase::PropertyMap > const &,::SireBase::PropertyMap const & );
        extract_coordinates_and_velocities_function_type extract_coordinates_and_velocities_function_value( &::SireOpenMM::extract_coordinates_and_velocities );
        
        bp::def( 
            "extract_coordinates_and_velocities"
            , extract_coordinates_and_velocities_function_value
            , ( bp::arg("state"), bp::arg("mols"), bp::arg("perturbable_maps"), bp::arg("map") )
            , "" );
    
    }

    { //::SireOpenMM::extract_space
    
        typedef ::SireVol::SpacePtr ( *extract_space_function_type )( ::OpenMM::State const & );
        extract_space_function_type extract_space_function_value( &::SireOpenMM::extract_space );
        
        bp::def( 
            "extract_space"
            , extract_space_function_value
            , ( bp::arg("state") )
            , "" );
    
    }

    { //::SireOpenMM::get_potential_energy
    
        typedef ::SireUnits::Dimension::MolarEnergy ( *get_potential_energy_function_type )( ::OpenMM::Context & );
        get_potential_energy_function_type get_potential_energy_function_value( &::SireOpenMM::get_potential_energy );
        
        bp::def( 
            "get_potential_energy"
            , get_potential_energy_function_value
            , ( bp::arg("context") )
            , "" );
    
    }

    { //::SireOpenMM::minimise_openmm_context
    
        typedef ::QString ( *minimise_openmm_context_function_type )( ::OpenMM::Context &,double,int,int,int,int,double,double,double,double );
        minimise_openmm_context_function_type minimise_openmm_context_function_value( &::SireOpenMM::minimise_openmm_context );
        
        bp::def( 
            "minimise_openmm_context"
            , minimise_openmm_context_function_value
            , ( bp::arg("context"), bp::arg("tolerance")=10., bp::arg("max_iterations")=(int)(-1), bp::arg("max_restarts")=(int)(10), bp::arg("max_ratchets")=(int)(20), bp::arg("ratchet_frequency")=(int)(500), bp::arg("starting_k")=100., bp::arg("ratchet_scale")=2., bp::arg("max_constraint_error")=0.01, bp::arg("timeout")=300. )
            , "This is a minimiser heavily inspired by the\nLocalEnergyMinimizer included in OpenMM. This is re-written\nfor sire to;\n\n1. Better integrate minimisation into the sire progress\nmonitoring  interupting framework.\n2. Avoid errors caused by OpenMM switching from the desired\ncontext to the CPU context, thus triggering spurious exceptions\nrelated to exclusions  exceptions not matching\n\nThis exposes more controls from the underlying minimisation\nlibrary, and also logs events and progress, which is returned\nas a string.\n\nThis raises an exception if minimisation fails.\n" );
    
    }

    { //::SireOpenMM::openmm_system_to_sire
    
        typedef ::SireMol::SelectorMol ( *openmm_system_to_sire_function_type )( ::OpenMM::System const &,::SireBase::PropertyMap const & );
        openmm_system_to_sire_function_type openmm_system_to_sire_function_value( &::SireOpenMM::openmm_system_to_sire );
        
        bp::def( 
            "openmm_system_to_sire"
            , openmm_system_to_sire_function_value
            , ( bp::arg("system"), bp::arg("map") )
            , "" );
    
    }

    { //::SireOpenMM::set_context_platform_property
    
        typedef void ( *set_context_platform_property_function_type )( ::OpenMM::Context &,::QString const &,::QString const & );
        set_context_platform_property_function_type set_context_platform_property_function_value( &::SireOpenMM::set_context_platform_property );
        
        bp::def( 
            "set_context_platform_property"
            , set_context_platform_property_function_value
            , ( bp::arg("context"), bp::arg("key"), bp::arg("value") )
            , "" );
    
    }

    { //::SireOpenMM::set_openmm_coordinates_and_velocities
    
        typedef void ( *set_openmm_coordinates_and_velocities_function_type )( ::OpenMM::Context &,::SireOpenMM::OpenMMMetaData const & );
        set_openmm_coordinates_and_velocities_function_type set_openmm_coordinates_and_velocities_function_value( &::SireOpenMM::set_openmm_coordinates_and_velocities );
        
        bp::def( 
            "set_openmm_coordinates_and_velocities"
            , set_openmm_coordinates_and_velocities_function_value
            , ( bp::arg("context"), bp::arg("coords_and_velocities") )
            , "" );
    
    }

    { //::SireOpenMM::sire_to_openmm_system
    
        typedef ::SireOpenMM::OpenMMMetaData ( *sire_to_openmm_system_function_type )( ::OpenMM::System &,::SireMol::SelectorMol const &,::SireBase::PropertyMap const & );
        sire_to_openmm_system_function_type sire_to_openmm_system_function_value( &::SireOpenMM::sire_to_openmm_system );
        
        bp::def( 
            "sire_to_openmm_system"
            , sire_to_openmm_system_function_value
            , ( bp::arg("system"), bp::arg("mols"), bp::arg("map") )
            , "\nThis is the (monster) function that converts a passed set of Sire\nmolecules (in the passed SelectorMols) into an OpenMM::System,\ncontrolled via the properties in the passed PropertyMap.\nThe OpenMM::System is constructed in the passed (empty)\nOpenMM::System that is the first argument. This is because this\nfunction is called from Python, and this was the only way found to\nhave the resulting OpenMM::System make its way back up to the\nPython layer.\nThis returns an extra set of metadata that doesnt fit into the\nOpenMM::System. This metadata includes information about any\nperturbations, the atom index, plus the coordinates and velocities\nfrom the molecules (if these could be found)\nThis is a monster function, as it does need to do everything, and\nthe parts of not easily decomposable (they need information from\na prior part that could be passed as function arguments, but\nwould be messy).\nThis function is best read as a sequence of stages. These stages\nare commented within the function. The stages are:\n1. Initialisation - copying molecular data from sire into OpenMMMolecule\n2. Create base forces (forcefields)\n3. Define the LambdaLever and LambdaSchedule\n4. Define the forces (forcefields) for the ghost atoms\n5. Copy atomistic forcefield parameters to the OpenMM forces\n6. Set up the nonbonded pair exceptions\n7. Set up the restraints\n8. Copy across all of the coordinates and velocities\n" );
    
    }

}
